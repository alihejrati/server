{
  "\\database\\mongodb\\prefix.conf.json": "SERVER#",
  "\\code\\kernel\\functions\\logger.conf.json": {
    "CONNECTION": "mongodb://localhost:27017/SERVER#db",
    "CATEGORY": "log",
    "enable": true,
    "map": {
      "warning": "warn",
      "database": "info",
      "watchdog": "trace"
    }
  },
  "\\database\\mongodb\\baran\\dsn.conf.json": "mongodb://localhost:27017/[baran]",
  "\\database\\mongodb\\db\\dsn.conf.json": "mongodb://localhost:27017/[db]",
  "\\database\\redis\\db\\dsn.conf.json": {
    "host": "localhost",
    "port": 6379
  },
  "\\database\\mongodb\\baran\\collection\\faq\\schema.conf.json": {
    "question": {
      "type": "String",
      "required": true,
      "unique": true
    },
    "answer": {
      "type": "String",
      "required": true
    }
  },
  "\\database\\mongodb\\baran\\collection\\faq\\seed.conf.json": [
    {
      "question": "چطوری بارانی بشم؟!",
      "answer": "کافیه تا دفتر باران بیای :)"
    }
  ],
  "\\database\\mongodb\\baran\\collection\\game\\schema.conf.json": {
    "title": {
      "type": "String",
      "required": true
    },
    "description": {
      "type": "String"
    },
    "type": {
      "type": "String",
      "enum": [
        "indore",
        "outdor"
      ],
      "required": true
    },
    "url": {
      "type": "String"
    },
    "imgs": {
      "type": [
        "String"
      ]
    },
    "suggest": {
      "type": "String"
    },
    "players": {
      "type": "String"
    },
    "age": {
      "type": "String",
      "enum": [
        "child",
        "teen",
        "young"
      ],
      "required": true
    }
  },
  "\\database\\mongodb\\baran\\collection\\game\\seed.conf.json": [],
  "\\database\\mongodb\\baran\\collection\\manualwork\\schema.conf.json": {
    "title": {
      "type": "String",
      "required": true
    },
    "description": {
      "type": "String"
    },
    "level": {
      "type": "String",
      "enum": [
        "easy",
        "medium",
        "hard"
      ],
      "required": true
    },
    "url": {
      "type": "String"
    },
    "imgs": {
      "type": [
        "String"
      ]
    },
    "suggest": {
      "type": "String"
    },
    "requiredsupplies": {
      "type": [
        {
          "key": "String",
          "value": "String"
        }
      ]
    },
    "Kind": {
      "type": [
        "String"
      ],
      "required": true
    },
    "primarysubstance": {
      "type": [
        "String"
      ],
      "required": true
    },
    "time": {
      "type": {
        "count": "integer",
        "step": "integer",
        "unit": {
          "type": "String",
          "enum": [
            "sec",
            "min",
            "hour"
          ],
          "default": "min"
        }
      }
    }
  },
  "\\database\\mongodb\\baran\\collection\\manualwork\\seed.conf.json": [],
  "\\database\\mongodb\\db\\collection\\captcha\\schema.conf.json": {
    "key": {
      "type": "String",
      "index": true,
      "required": true
    },
    "value": {
      "type": "String",
      "index": true,
      "required": true
    }
  },
  "\\database\\mongodb\\db\\collection\\config\\schema.conf.json": {
    "key": {
      "type": "String",
      "index": true,
      "unique": true,
      "required": true
    },
    "value": {
      "type": "Object",
      "default": {}
    }
  },
  "\\database\\mongodb\\db\\collection\\config\\seed.conf.json": [
    {
      "key": "\\code\\source\\components\\captcha\\check.conf.json",
      "value": {
        "expire": {
          "minute": 6
        }
      }
    },
    {
      "key": "\\code\\source\\components\\model\\redis\\set.conf.json",
      "value": {
        "expire": 900
      }
    },
    {
      "key": "\\code\\source\\server\\http\\listen.conf.json",
      "value": [
        {
          "name": "frontend",
          "host": "localhost",
          "port": "8080"
        },
        {
          "name": "backend",
          "host": "192.168.1.106",
          "port": "8081"
        }
      ]
    },
    {
      "key": "\\code\\source\\server\\socket\\listen.conf.json",
      "value": {
        "name": "socket",
        "host": "192.168.1.106",
        "port": "3000"
      }
    },
    {
      "key": "\\code\\source\\server\\http\\router.conf.json",
      "value": {
        "/backend/تست2/تست": "/test/test2.php"
      }
    },
    {
      "key": "\\code\\source\\server\\socket\\router.conf.json",
      "value": {
        "/تست2/تست": "/test/test2.php"
      }
    },
    {
      "key": "\\code\\source\\server\\http\\cookies.conf.json",
      "value": {
        "name": "SERVER:server/http",
        "expire": 86400000
      }
    },
    {
      "key": "\\code\\source\\server\\socket\\cookies.conf.json",
      "value": {
        "name": "SERVER:server/socket",
        "expire": 86400000
      }
    },
    {
      "key": "\\npm\\jwt.conf.json",
      "value": {
        "secret": "secret-CODE"
      }
    },
    {
      "key": "\\code\\source\\server\\http\\status.conf.json",
      "value": {
        "continue": 100,
        "switchingProtocols": 101,
        "processing": 102,
        "successful": 200,
        "created": 201,
        "accepted": 202,
        "nonAuthoritativeInformation": 203,
        "noContent": 204,
        "resetContent": 205,
        "partialContent": 206,
        "multiStatus": 207,
        "alreadyReported": 208,
        "iMUsed": 226,
        "multipleChoices": 300,
        "movedPermanently": 301,
        "found": 302,
        "seeOther": 303,
        "notModified": 304,
        "useProxy": 305,
        "unused": 306,
        "temporaryRedirect": 307,
        "permanentRedirect": 308,
        "badRequest": 400,
        "unauthorized": 401,
        "paymentRequired": 402,
        "forbidden": 403,
        "notFound": 404,
        "methodNotAllowed": 405,
        "notAcceptable": 406,
        "proxyAuthenticationRequired": 407,
        "requestTimeout": 408,
        "conflict": 409,
        "gone": 410,
        "lengthRequired": 411,
        "preconditionFailed": 412,
        "requestEntityTooLarge": 413,
        "requestURITooLong": 414,
        "unsupportedMediaType": 415,
        "requestedRangeNotSatisfiable": 416,
        "expectationFailed": 417,
        "teapot": 418,
        "enhanceYourCalm": 420,
        "unprocessableEntity": 422,
        "locked": 423,
        "failedDependency": 424,
        "reservedForWebDAV": 425,
        "upgradeRequired": 426,
        "preconditionRequired": 428,
        "tooManyRequests": 429,
        "requestHeaderFieldsTooLarge": 431,
        "noResponse": 444,
        "retryWithMicrosoft": 449,
        "blockedByWindowsParentalControls": 450,
        "unavailableForLegalReasons": 451,
        "clientClosedRequest": 499,
        "internalServerError": 500,
        "notImplemented": 501,
        "badGateway": 502,
        "serviceUnavailable": 503,
        "gatewayTimeout": 504,
        "httpVersionNotSupported": 505,
        "variantAlsoNegotiates": 506,
        "insufficientStorage": 507,
        "loopDetected": 508,
        "bandwidthLimitExceeded": 509,
        "notExtended": 510,
        "networkAuthenticationRequired": 511,
        "networkReadTimeoutError": 598,
        "networkConnectTimeoutError": 599
      }
    },
    {
      "key": "\\code\\source\\server\\http\\service\\test\\test2\\service.conf.json",
      "value": {
        "enable": true,
        "captcha": false,
        "controller": [
          "*"
        ],
        "method": [
          "get",
          "post"
        ],
        "permission": [
          "sdda",
          "adads=adsa",
          "adsad-asda-ads-a-d-d"
        ]
      }
    },
    {
      "key": "\\code\\source\\server\\http\\service\\authuntication\\signup\\username-password\\service.conf.json",
      "value": {
        "enable": true,
        "captcha": true,
        "controller": [
          "*"
        ],
        "method": [
          "post"
        ],
        "permission": []
      }
    },
    {
      "key": "\\code\\source\\server\\http\\service\\authuntication\\signin\\username-password\\service.conf.json",
      "value": {
        "enable": true,
        "captcha": true,
        "controller": [
          "*"
        ],
        "method": [
          "post"
        ],
        "permission": []
      }
    },
    {
      "key": "\\code\\source\\server\\http\\service\\authuntication\\signout\\username-password\\service.conf.json",
      "value": {
        "enable": true,
        "captcha": true,
        "controller": [
          "*"
        ],
        "method": [
          "post"
        ],
        "permission": []
      }
    },
    {
      "key": "\\code\\source\\server\\http\\service\\captcha\\create\\service.conf.json",
      "value": {
        "enable": true,
        "captcha": false,
        "controller": [
          "*"
        ],
        "method": [
          "post"
        ],
        "permission": []
      }
    },
    {
      "key": "\\code\\source\\server\\http\\service\\permission\\assignment\\service.conf.json",
      "value": {
        "enable": true,
        "captcha": true,
        "controller": [
          "*"
        ],
        "method": [
          "post"
        ],
        "permission": [
          "*"
        ]
      }
    },
    {
      "key": "\\code\\source\\server\\socket\\service\\test\\test2\\service.conf.json",
      "value": {
        "enable": true,
        "captcha": true,
        "permission": []
      }
    }
  ],
  "\\database\\mongodb\\db\\collection\\permission\\schema.conf.json": {
    "label": "String",
    "name": {
      "type": "String",
      "index": true,
      "unique": true,
      "required": true
    }
  },
  "\\database\\mongodb\\db\\collection\\permission\\seed.conf.json": [
    {
      "label": "",
      "name": "*"
    }
  ],
  "\\database\\mongodb\\db\\collection\\request\\schema.conf.json": {
    "response": {
      "type": "Object"
    },
    "_": {
      "type": "Object"
    }
  },
  "\\database\\mongodb\\db\\collection\\role\\schema.conf.json": {
    "label": "String",
    "name": {
      "type": "String",
      "index": true,
      "unique": true,
      "required": true
    },
    "permission": [
      "ObjectId"
    ]
  },
  "\\database\\mongodb\\db\\collection\\socket\\schema.conf.json": {
    "state": {
      "type": "String",
      "enum": [
        "connect",
        "disconnect"
      ],
      "index": true,
      "required": true
    },
    "socketId": {
      "type": "String",
      "index": true,
      "required": true
    },
    "event": {
      "type": "Object"
    },
    "message": {
      "type": "Object"
    },
    "_": {
      "type": "Object"
    }
  },
  "\\database\\mongodb\\db\\collection\\stack\\schema.conf.json": {
    "stack": {
      "type": "Array",
      "default": []
    }
  },
  "\\database\\mongodb\\db\\collection\\user\\schema.conf.json": {
    "username": {
      "type": "String",
      "index": true,
      "unique": true,
      "required": true
    },
    "password": {
      "type": "String",
      "index": true,
      "required": true
    },
    "role": {
      "type": "ObjectId",
      "index": true,
      "required": true
    },
    "view": {
      "type": "ObjectId",
      "index": true,
      "required": true
    }
  },
  "\\database\\mongodb\\db\\collection\\view\\schema.conf.json": {
    "label": "String",
    "name": {
      "type": "String",
      "index": true,
      "unique": true,
      "required": true
    },
    "branch": {
      "type": "Object",
      "index": true,
      "required": true,
      "default": {
        "@frontend": "/basic",
        "@backend": "/robust/html/RTL/vertical-overlay-menu-template"
      }
    }
  },
  "\\database\\mongodb\\db\\collection\\config\\seed": {
    "conf": {
      "json": [
        {
          "key": "\\code\\source\\components\\captcha\\check.conf.json",
          "value": {
            "expire": {
              "minute": 6
            }
          }
        },
        {
          "key": "\\code\\source\\components\\model\\redis\\set.conf.json",
          "value": {
            "expire": 900
          }
        },
        {
          "key": "\\code\\source\\server\\http\\listen.conf.json",
          "value": [
            {
              "name": "frontend",
              "host": "localhost",
              "port": "8080"
            },
            {
              "name": "backend",
              "host": "192.168.1.106",
              "port": "8081"
            }
          ]
        },
        {
          "key": "\\code\\source\\server\\socket\\listen.conf.json",
          "value": {
            "name": "socket",
            "host": "192.168.1.106",
            "port": "3000"
          }
        },
        {
          "key": "\\code\\source\\server\\http\\router.conf.json",
          "value": {
            "/backend/تست2/تست": "/test/test2.php"
          }
        },
        {
          "key": "\\code\\source\\server\\socket\\router.conf.json",
          "value": {
            "/تست2/تست": "/test/test2.php"
          }
        },
        {
          "key": "\\code\\source\\server\\http\\cookies.conf.json",
          "value": {
            "name": "SERVER:server/http",
            "expire": 86400000
          }
        },
        {
          "key": "\\code\\source\\server\\socket\\cookies.conf.json",
          "value": {
            "name": "SERVER:server/socket",
            "expire": 86400000
          }
        },
        {
          "key": "\\npm\\jwt.conf.json",
          "value": {
            "secret": "secret-CODE"
          }
        },
        {
          "key": "\\code\\source\\server\\http\\status.conf.json",
          "value": {
            "continue": 100,
            "switchingProtocols": 101,
            "processing": 102,
            "successful": 200,
            "created": 201,
            "accepted": 202,
            "nonAuthoritativeInformation": 203,
            "noContent": 204,
            "resetContent": 205,
            "partialContent": 206,
            "multiStatus": 207,
            "alreadyReported": 208,
            "iMUsed": 226,
            "multipleChoices": 300,
            "movedPermanently": 301,
            "found": 302,
            "seeOther": 303,
            "notModified": 304,
            "useProxy": 305,
            "unused": 306,
            "temporaryRedirect": 307,
            "permanentRedirect": 308,
            "badRequest": 400,
            "unauthorized": 401,
            "paymentRequired": 402,
            "forbidden": 403,
            "notFound": 404,
            "methodNotAllowed": 405,
            "notAcceptable": 406,
            "proxyAuthenticationRequired": 407,
            "requestTimeout": 408,
            "conflict": 409,
            "gone": 410,
            "lengthRequired": 411,
            "preconditionFailed": 412,
            "requestEntityTooLarge": 413,
            "requestURITooLong": 414,
            "unsupportedMediaType": 415,
            "requestedRangeNotSatisfiable": 416,
            "expectationFailed": 417,
            "teapot": 418,
            "enhanceYourCalm": 420,
            "unprocessableEntity": 422,
            "locked": 423,
            "failedDependency": 424,
            "reservedForWebDAV": 425,
            "upgradeRequired": 426,
            "preconditionRequired": 428,
            "tooManyRequests": 429,
            "requestHeaderFieldsTooLarge": 431,
            "noResponse": 444,
            "retryWithMicrosoft": 449,
            "blockedByWindowsParentalControls": 450,
            "unavailableForLegalReasons": 451,
            "clientClosedRequest": 499,
            "internalServerError": 500,
            "notImplemented": 501,
            "badGateway": 502,
            "serviceUnavailable": 503,
            "gatewayTimeout": 504,
            "httpVersionNotSupported": 505,
            "variantAlsoNegotiates": 506,
            "insufficientStorage": 507,
            "loopDetected": 508,
            "bandwidthLimitExceeded": 509,
            "notExtended": 510,
            "networkAuthenticationRequired": 511,
            "networkReadTimeoutError": 598,
            "networkConnectTimeoutError": 599
          }
        },
        {
          "key": "\\code\\source\\server\\http\\service\\test\\test2\\service.conf.json",
          "value": {
            "enable": true,
            "captcha": false,
            "controller": [
              "*"
            ],
            "method": [
              "get",
              "post"
            ],
            "permission": [
              "sdda",
              "adads=adsa",
              "adsad-asda-ads-a-d-d"
            ]
          }
        },
        {
          "key": "\\code\\source\\server\\http\\service\\authuntication\\signup\\username-password\\service.conf.json",
          "value": {
            "enable": true,
            "captcha": true,
            "controller": [
              "*"
            ],
            "method": [
              "post"
            ],
            "permission": []
          }
        },
        {
          "key": "\\code\\source\\server\\http\\service\\authuntication\\signin\\username-password\\service.conf.json",
          "value": {
            "enable": true,
            "captcha": true,
            "controller": [
              "*"
            ],
            "method": [
              "post"
            ],
            "permission": []
          }
        },
        {
          "key": "\\code\\source\\server\\http\\service\\authuntication\\signout\\username-password\\service.conf.json",
          "value": {
            "enable": true,
            "captcha": true,
            "controller": [
              "*"
            ],
            "method": [
              "post"
            ],
            "permission": []
          }
        },
        {
          "key": "\\code\\source\\server\\http\\service\\captcha\\create\\service.conf.json",
          "value": {
            "enable": true,
            "captcha": false,
            "controller": [
              "*"
            ],
            "method": [
              "post"
            ],
            "permission": []
          }
        },
        {
          "key": "\\code\\source\\server\\http\\service\\permission\\assignment\\service.conf.json",
          "value": {
            "enable": true,
            "captcha": true,
            "controller": [
              "*"
            ],
            "method": [
              "post"
            ],
            "permission": [
              "*"
            ]
          }
        },
        {
          "key": "\\code\\source\\server\\socket\\service\\test\\test2\\service.conf.json",
          "value": {
            "enable": true,
            "captcha": true,
            "permission": []
          }
        }
      ]
    }
  }
}
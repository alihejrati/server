<script>

</script>

<script>
    const services = JSON.parse('<%-JSON.stringify(variables.service)%>') || {};

    function service(...arg) {
        const type = arg[0];

        if (type == 'tools') {
            const tool = arg[1];
            const _this = arg[2];
            const _id = $(_this).closest('tr').attr('id');
            if (tool == 'check') {
                let flag = $(_this).css('color') == 'rgb(0, 255, 0)';
                console.log('------>', $(_this).css('color'));
                !flag ? $(_this).css('color', 'rgb(0, 255, 0)') : $(_this).css('color', '');
            }

            if (tool == 'link') {
                for (const iterator of DATA) {
                    if (iterator._id == _id) {
                        let a = (iterator.category + ':' + iterator.name )
                        a = iterator.category ? a: iterator.name
                        window.location.replace("/table/" + a);
                    }
                }
            }

            if (services[tool].server == 'http' && tool != 'link') {
                const route = services[tool].route;
                const json = {};
                json['_id'] = _id;
                const BTN = Object.assign({}, msg.btn);
                msg.btn.confirm = 'بله'
                $('button#ajax-request').click();
                const cb = () => {
                    msg.btn.confirm = 'بسیار خب'
                    $.post(route, json, res => {
                        let _______key = '';
                        for (const iterator of ('/' + route).replace(/\/+/g, '/').replace(/\/+$/g, '')
                                .substr(1)
                                .split('/')) {
                            _______key += '["' + iterator + '"]';
                        }
                        const response = eval('res' + _______key);

                        log('---------->_id', _id, res, route, response);
                        if (response.code == 200) {
                            swal('تراکنش باموفقیت انجام شد');
                            $('a[data-action="reload"]').click();
                        } else {
                            swal('تراکنش موفقیت آمیز نبود');
                        }
                    });
                }
                msg.cb = cb;
                msg.btn = BTN;
            }
        }
    }
</script>

<script>
    function objrev(obj) {
        const newObj = {};
        const keys = Object.keys(obj).reverse();
        for (const key of keys) {
            newObj[key] = obj[key];
        }
        return newObj;
    }
</script>

<script>
    function rerender(_this, d, name, fullname) {
        testTable = $('.testTable').htmlson({ //the magic
            data: Array.isArray(d) ? d : [d],
            // headers: {
            //     1: 'FIRST NAME',
            //     4: 'CUSTOM HEADER'
            // },
            debug: true
        });
        const c = '<sup><i class="fa fa-quote-left COT" aria-hidden="true"></i></sup>' +
            `${$('div#obj h4#myModalLabel16').html()} {{REP}} ${fullname} {{REP}} ${name}`.replace(/جزئیات ستون /, '')
            .replace(/"/g, '') + '<sup><i class="fa fa-quote-right COT" aria-hidden="true"></i></sup>';
        $('div#obj h4#myModalLabel16').html(
            `جزئیات ستون ${c.replace(/{{REP}}/g, '<i class="fa fa-caret-right COT" aria-hidden="true"></i>')}`);
        $('#btnBack').css('display', 'block');
        STACK.push($('#objectTableModel').html());
    }
</script>

<script>
    function back() {
        let last, final;
        last = $('#objectTableModel').html();
        $('#objectTableModel').html(STACK[STACK.length - 2]);
        final = $('#objectTableModel').html();
        if (last == final) {

        } else {
            STACK.pop();
        }
    }
</script>
<script>
    var selVal = $('select[name="table_length"]').val();
</script>
<script>
    var RENDER;
    var COL;
    var DATA;
    var ROW;
    var COLNAME;
    var STACK;
    $('#table tbody').on('click', 'tr', function () {
        STACK = [];
        $('#btnBack').css('display', 'none');
        COLNAME = '';
        for (const row of DATA) {
            if (row._id == table.row(this).data()['_id']) {
                ROW = row;
                testTable = $('.testTable').htmlson({ //the magic
                    data: Array.isArray(row[COL]) ? row[COL] : [objrev(row[COL])],
                    // headers: {
                    //     1: 'FIRST NAME',
                    //     4: 'CUSTOM HEADER'
                    // },
                    debug: true
                });
                COLNAME += COL;
                $('div#obj h4#myModalLabel16').html(
                    `جزئیات ستون <sup><i class="fa fa-quote-left COT" aria-hidden="true"></i></sup>${COLNAME}<sup><i class="fa fa-quote-right COT" aria-hidden="true"></i></sup>`
                );
                STACK.push($('#objectTableModel').html());
                console.log('-------------------------------------------------------------------->', STACK
                    .length);
                break;
            }
        }
    });
    $(window).scroll(function (event) {
        var scroll = $(window).scrollTop();
        // Do something
        // console.log('----------->scroll', scroll);
    });
    $('#tbl-label').html('<%-variables.label%>');
    $('#tbl-text').html('<%-variables.description%>');
    const buttons = JSON.parse('<%-JSON.stringify(variables.buttons)%>');
    if (buttons.add) {
        buttons.add.action = (e, dt, node, config) => $('#btn-add').click();
    }
    if (buttons['del-multi']) {
        buttons['del-multi'].action = (e, dt, node, config) => null;
    }

    const _buttons = Object.keys(buttons).reverse().map((ele, i) => {
        buttons[ele].text = map(buttons[ele].text, buttons[ele].html);
        return buttons[ele];
    });
    const config = JSON.parse('<%-JSON.stringify(variables.columns)%>');
    const columns = Object.keys(config).reverse();
    const _columns = columns.map((col, i) => config[col]);
    const btn = (columns.indexOf('tools') >= 0 ? config['tools'].defaultContent.split(':') : []).map((btn, i) => map(
        btn, {
            title: config['tools'].html.title.split(':')[i]
        }));
    if (columns.indexOf('tools') >= 0) {
        config['tools'].defaultContent = btn.join('');
    }
    $('#thead').html('');
    $('#tfoot').html('');
    for (const col of columns) {
        $('#thead').append(`<th>${config[col].title || config[col].data}</th>`);
        $('#tfoot').append(`<th>${config[col].title || config[col].data}</th>`);
    }

    // jQuery('#table').dataTable({
    //     oLanguage: {
    //         sLengthMenu: "<select>" +
    //             "<option value='100'>10</option>" +
    //             "<option value='200'>25</option>" +
    //             "<option value='300'>50</option>" +
    //             "<option value='-1'>75</option>" +
    //             "<option value='-1'>100</option>" +
    //             "</select>"
    //     },
    //     "iDisplayLength": 100

    // });
    
    var table = $('#table').DataTable({
        select: {
            style: 'single'
        },
        rowId: "_id",
        "autoWidth": true,
        "processing": true,
        oLanguage: {
            sProcessing: "درحال پردازش...",
            sLengthMenu: `تعداد<select name="table_length" aria-controls="table" class="form-control input-sm">` +
                `<option onclick="reloadTbl()" value='10'>10</option>` +
                `<option onclick="reloadTbl()" value='25'>25</option>` +
                `<option onclick="reloadTbl()" value='50'>50</option>` +
                `<option onclick="reloadTbl()" value='100'>100</option>` +
                `</select>`
        },
        scroller: {
            loadingIndicator: true
        },
        // "orderMulti" : true,
        // ordering: true,
        // searching: true,
        // responsive: true,
        "dom": 'Bfrltip',
        buttons: _buttons,
        // "deferRender": true,
        "serverSide": true,
        "info": true,
        "ajax": function (data, callback, settings) {
            var sort_column_name = data.columns[data.order[0].column].data.replace(/\./g, "__");
            var direction = "";

            if (data.order[0].dir == "desc") {
                direction = "-"
            };

            selVal = $('select[name="table_length"]').val();
            $.post('<%-variables.service.read.route%>', {
                limit: Number($('select[name="table_length"]').val()),
                offset: data.start,
                your_search_field__searchattr: $('div#table_filter input').val(),
                order_by: direction +
                    sort_column_name
            }, function (res) {

                $("div.toolbar").html('');
                $("div#table_filter label").html($("div#table_filter label").html().replace(
                    'Search', 'جستجو'));
                $("div#table_length label").html($("div#table_length label").html().replace('Show',
                    'تعداد').replace('entries', ''));
                const _subkey = '<%-variables.service.read.route%>'
                    .replace(/\/+/g,
                        '/')
                    .replace(/\//g,
                        '.')
                    .replace(/\.+/g,
                        '.');
                let subkey = '';
                for (const iterator of _subkey.split('.')) {
                    if (iterator == '') {
                        continue;
                    }
                    subkey += `["${iterator}"]`;
                }
                subkey = subkey.replace(/\./g, '');
                const response = eval(
                    `res${subkey}`
                ) || {};
                if (response.code == 200) {
                    var data = response.code == 200 ? JSON.parse(JSON.stringify(response.body)) :
                [];
                    DATA = response.code == 200 ? JSON.parse(JSON.stringify(response.body)) : [];
                    for (let index = 0; index < response.body.length; index++) {
                        const keys = Object.keys(response.body[index]);
                        for (const key of keys) {
                            if (typeof response.body[index][key] == 'object') {
                                data[index][key] = map('table', {
                                    title: 'نمایش جزئیات',
                                    onclick: `$('#btn-obj').click();COL='${key}'`
                                })
                            } else {
                                // not statement!!
                            }
                        }
                    }
                }
                callback({
                    recordsTotal: response.code == 200 ? data.length : 0,
                    recordsFiltered: response.code == 200 ? data.length : 0,
                    data: response.code == 200 ? data : []
                });
                $('select[name="table_length"]').val(selVal)
            });
        },
        "columns": _columns,
        "order": [
            [1, "asc"]
        ]
    });
    $('#table').css( 'width', '100%' )
    $('#table').css( 'border', '0' )
    $('#table thead').css( 'border', '0' )
    table.columns.adjust();
    table.responsive.recalc();
</script>